services:
  # Postgres service
  db:
    # Image to be pulled from Docker Hub
    image: postgres:alpine
    restart: always
    # Environment variables
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: maximus

    ports:
      - 5433:5432
    # Volume to persist the data even after the container is stopped
    volumes:
      - ./app-data-dev/data/postgres:/var/lib/postgresql/data
    # Healthcheck command because other containers depend on this one
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    command: ['redis-server', '--bind', 'redis', '--port', '6379']
    ports:
      - 6378:6379
    volumes:
      - ./app-data-dev/redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    image: vishal2457/mx-api-dev
    profiles: ['dev']
    build:
      context: ./
      dockerfile: ./infra/Dockerfile.api
    environment:
      - DB_USERNAME=${DB_USERNAME}
      - DB_PORT=${DB_PORT}
      - DB_PASSWORD=${DB_PASSWORD}
      - NODE_HOST=${NODE_HOST}
      - FIREBASE_PRIVATE_KEY_ID=${FIREBASE_PRIVATE_KEY_ID}
      - JWT_SECRET=${JWT_SECRET}
      - RAZORPAY_KEY=${RAZORPAY_KEY}
      - RAZORPAY_SECRET=${RAZORPAY_SECRET}
    volumes:
      - ./app-data-dev/api/images:/app/mx-images
      - ./app-data-dev/api/logs:/app/logs
    expose:
      - 3001
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 7
    depends_on:
      - db
      - redis

  caddy:
    image: vishal2457/mx-caddy-dev
    restart: unless-stopped
    profiles: ['dev']
    build:
      context: .
      dockerfile: ./infra/Dockerfile.caddy
    ports:
      - 3001:3000
      - 4201:80
      - 4202:443
    volumes:
      - ./app-data-dev/api/images:/app/mx-images
    depends_on:
      - api
