services:
  # Postgres service
  db-mx:
    # Image to be pulled from Docker Hub
    image: postgres:alpine
    restart: always
    # Environment variables
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: fitflow
    expose:
      - '5433'
    ports:
      - 5433:5433
    # Volume to persist the data even after the container is stopped
    volumes:
      - ./app-data-dev/data/postgres:/var/lib/postgresql/data
    command: -p 5433
    # Healthcheck command because other containers depend on this one
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis-mx:
    image: redis:alpine
    command: --port 6378
    ports:
      - 6378:6378
    expose:
      - '6378'
    volumes:
      - ./app-data-dev/redis_data:/data

  api-mx:
    image: mx-api-dev
    profiles: ['dev']
    build:
      context: ./
      dockerfile: ./infra/Dockerfile.api
    env_file:
      - ./.env
    volumes:
      - ./app-data-dev/api/images:/app/mx-images
      - ./app-data-dev/api/logs:/app/logs
    expose:
      - 3001
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 7
    depends_on:
      - db-mx
      - redis-mx

  # caddy:
  #   image: vishal2457/mx-caddy-dev
  #   restart: unless-stopped
  #   profiles: ['dev']
  #   build:
  #     context: .
  #     dockerfile: ./infra/Dockerfile.caddy
  #   ports:
  #     - 3001:3000
  #     - 4201:80
  #     - 4202:443
  #   volumes:
  #     - ./app-data-dev/api/images:/app/mx-images
  #   depends_on:
  #     - api

  # prometheus:
  #   image: prom/prometheus:latest
  #   volumes:
  #     - ./app-data-dev/prometheus_data:/prometheus
  #     - ./infra/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - ./infra/prometheus.rules.yml:/etc/prometheus/prometheus.rules.yml
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #   ports:
  #     - '9090:9090'

  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - '3003:3000'
  #   environment:
  #     GF_SECURITY_ADMIN_USER: admin
  #     GF_SECURITY_ADMIN_PASSWORD: admin

  # pg_exporter:
  #   image: quay.io/prometheuscommunity/postgres-exporter:latest
  #   environment:
  #     DATA_SOURCE_NAME: 'postgresql://root:root@db:5432/maximus?sslmode=disable'
  #   ports:
  #     - '9187:9187'
  #   volumes:
  #     - ./infra/queries.yaml:/etc/postgres_exporter/queries.yaml
  #   command:
  #     - '--extend.query-path=/etc/postgres_exporter/queries.yaml'
  #   depends_on:
  #     - db

  nginx-mx:
    image: mx-nginx
    build:
      context: ./
      dockerfile: ./infra/Dockerfile.nginx
    ports:
      - 3001:3001
      - 4200:4200
    depends_on:
      - api-mx
