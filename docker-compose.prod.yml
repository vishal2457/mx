services:
  # Postgres service
  db-mx:
    # Image to be pulled from Docker Hub
    image: postgres:alpine
    restart: always
    # Environment variables
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: fitflow
    ports:
      - 5432:5432
    # Volume to persist the data even after the container is stopped
    volumes:
      - ./app-data-mx/data/postgres:/var/lib/postgresql/data
    # Healthcheck command because other containers depend on this one
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis-mx:
    image: redis:alpine
    ports:
      - 6379:6379
    volumes:
      - ./app-data-mx/redis_data:/data

  api-mx:
    image: vishal2457/mx-api
    profiles: ['prod']
    build:
      context: ./
      dockerfile: ./infra/Dockerfile.api
    # env_file:
    #   - ./.env
    environment:
      - DB_USERNAME=${DB_USERNAME}
      - DB_PORT=${DB_PORT}
      - DB_PASSWORD=${DB_PASSWORD}
      - NODE_HOST=${NODE_HOST}
      - FIREBASE_PRIVATE_KEY_ID=${FIREBASE_PRIVATE_KEY_ID}
      - JWT_SECRET=${JWT_SECRET}
      - SENDER_EMAIL_HOST=${SENDER_EMAIL_HOST}
      - SENDER_EMAIL_PORT=${SENDER_EMAIL_PORT}
      - SENDER_EMAIL_ID=${SENDER_EMAIL_ID}
      - SENDER_EMAIL_PASSWORD=${SENDER_EMAIL_PASSWORD}
    volumes:
      - ./app-data-mx/api/images:/app/mx-images
      - ./app-data-mx/api/logs:/app/logs
    expose:
      - 3001
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 7
    depends_on:
      - db-mx
      - redis-mx

  # caddy-mx:
  #   image: mx-caddy
  #   restart: unless-stopped
  #   profiles: ['prod']
  #   build:
  #     context: .
  #     dockerfile: ./infra/Dockerfile.caddy
  #   ports:
  #     - 3001:3001
  #     - 4200:4200
  #     - 443:443
  #   volumes:
  #     - ./app-data-mx/api/images:/app/mx-images
  #   depends_on:
  #     - api-mx

  nginx-mx:
    image: vishal2457/mx-nginx
    build:
      context: ./
      dockerfile: ./infra/Dockerfile.nginx
    ports:
      - 80:80
    depends_on:
      - api-mx
